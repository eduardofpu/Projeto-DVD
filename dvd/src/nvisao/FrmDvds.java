/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package nvisao;


import controle.ConectaBanco;
import controle.ControleDvds;
import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;


import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;

import java.io.InputStream;

import java.net.URL;
import java.sql.PreparedStatement;


import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.AbstractAction;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.JFileChooser;

import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import javax.swing.ListSelectionModel;
import javax.swing.filechooser.FileNameExtensionFilter;
import modelo.ModeloDvds;
import modelo.ModeloTabela;
import static sun.security.krb5.Confounder.bytes;


/**
 *
 * @author Delfino
 */
public class FrmDvds extends javax.swing.JFrame {
 
    FileInputStream fis ;
    int longitudBytes;
    ConectaBanco conex = new ConectaBanco();
    ControleDvds control = new ControleDvds();
    ModeloDvds mod = new ModeloDvds();
    int flag =1;
    private BufferedImage img;
    
    
    
    
    public FrmDvds() {
        initComponents();
        
        URL url = this.getClass().getResource("/Imagens/dvd.png");  //coloca a imagem no lugar da tigela java
          Image imagemTitulo = Toolkit.getDefaultToolkit().getImage(url);  
            this.setIconImage(imagemTitulo);
        preencherTabela("select * from dvds");
        
        
        preencherTabelaImg("select * from imagem");
        
        ////////////////////////////////////////////////////////////////////////////////    
        //faz os botões serem acionados com a tecla enter
    AbstractAction action = new AbstractAction() {
    @Override
    public void actionPerformed(ActionEvent e) {
        if(e.getSource() instanceof JButton){
        JButton button = (JButton) e.getSource();
        button.doClick();        
        } else if(e.getSource() instanceof JComponent){
            JComponent component = (JComponent) e.getSource();
            component.transferFocus();
        }
    }
    };
    jButton1.getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0), "DoClick");
    jButton1.getActionMap().put("DoClick", action);
    jButton2.getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0), "DoClick");
    jButton2.getActionMap().put("DoClick", action);      
    jButton3.getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0), "DoClick");
    jButton3.getActionMap().put("DoClick", action);
    jButton4.getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0), "DoClick");
    jButton4.getActionMap().put("DoClick", action);
    jButton5.getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0), "DoClick");
    jButton5.getActionMap().put("DoClick", action);
    jButton6.getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0), "DoClick");
    jButton6.getActionMap().put("DoClick", action); 
    jButton7.getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0), "DoClick");
    jButton7.getActionMap().put("DoClick", action);
    jButton8.getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0), "DoClick");
    jButton8.getActionMap().put("DoClick", action);
        
        getRootPane().setDefaultButton(jButton9);//botão sair com enter
  ///////////////////////////////////////////////////////////////////////////////////////////////   
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldCodg = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldTitulo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldTipo = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldQuanti = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jtFilme = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButtonSalvar = new javax.swing.JButton();
        jButtonAtualizarFoto = new javax.swing.JButton();
        jButtonBuscarFotos = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jTextFieldBuscarImagem = new javax.swing.JTextField();
        jLabelImagem = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButtonGravaImagem = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldId = new javax.swing.JTextField();
        jButtonAtualizar = new javax.swing.JButton();
        jButtonPesquisarImagem = new javax.swing.JButton();
        Aventura = new javax.swing.JButton();
        jButtonDrama = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jButtonComedia = new javax.swing.JButton();
        jButtonReligiosos = new javax.swing.JButton();
        jButtonRomance = new javax.swing.JButton();
        jButtonDocumentario = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Filmes");
        setBackground(new java.awt.Color(255, 204, 204));

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setText("Codigo:");

        jTextFieldCodg.setEnabled(false);

        jLabel2.setText("Titulo:");

        jLabel3.setText("Tipo:");

        jLabel4.setText("Quantidade:");

        jTable1.setBackground(new java.awt.Color(153, 255, 153));
        jTable1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.setRowHeight(30);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/search.png"))); // NOI18N
        jButton1.setToolTipText("Pesquisa");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jDesktopPane1.setBackground(new java.awt.Color(51, 51, 0));

        jButton2.setText("Novo");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Alterar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Excluir");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Primeiro");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton7.setText("Anterior");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("Próximo");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("sair");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton6.setText("Ultimo");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jButton2)
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addGap(31, 31, 31)
                .addComponent(jButton4)
                .addGap(34, 34, 34)
                .addComponent(jButton5)
                .addGap(16, 16, 16)
                .addComponent(jButton8)
                .addGap(18, 18, 18)
                .addComponent(jButton7)
                .addGap(16, 16, 16)
                .addComponent(jButton6)
                .addGap(18, 18, 18)
                .addComponent(jButton9)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton2)
                        .addComponent(jButton4)
                        .addComponent(jButton5)
                        .addComponent(jButton7)
                        .addComponent(jButton8)
                        .addComponent(jButton9)
                        .addComponent(jButton6)))
                .addContainerGap())
        );
        jDesktopPane1.setLayer(jButton2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jButton3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jButton4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jButton5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jButton7, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jButton8, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jButton9, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jButton6, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButtonSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/22.png"))); // NOI18N
        jButtonSalvar.setToolTipText("Salvar");
        jButtonSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarActionPerformed(evt);
            }
        });

        jButtonAtualizarFoto.setText("Atualizar Foto");
        jButtonAtualizarFoto.setToolTipText("Atualizar Foto");
        jButtonAtualizarFoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAtualizarFotoActionPerformed(evt);
            }
        });

        jButtonBuscarFotos.setText("Buscar Fotos");
        jButtonBuscarFotos.setToolTipText("Buscar Fotos");
        jButtonBuscarFotos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarFotosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(317, 317, 317)
                .addComponent(jtFilme, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jTextFieldTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(97, 97, 97)
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(jTextFieldQuanti, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jTextFieldCodg, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(48, 48, 48)
                                .addComponent(jButtonBuscarFotos)
                                .addGap(34, 34, 34)
                                .addComponent(jButtonAtualizarFoto))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jTextFieldTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonSalvar)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jDesktopPane1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 715, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(44, 44, 44))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldCodg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonBuscarFotos, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonAtualizarFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTextFieldTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(jTextFieldQuanti, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jTextFieldTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jButtonSalvar))
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jtFilme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jButton10.setText("DVD");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jLabelImagem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/mulhergato.jpg"))); // NOI18N

        jTable2.setBackground(new java.awt.Color(255, 255, 204));
        jTable2.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTable2.setRowHeight(20);
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jButtonGravaImagem.setText("GravarImagem");
        jButtonGravaImagem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGravaImagemActionPerformed(evt);
            }
        });

        jLabel5.setText("id");

        jButtonAtualizar.setText("Atualizar foto");
        jButtonAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAtualizarActionPerformed(evt);
            }
        });

        jButtonPesquisarImagem.setText("pesquisarImagem");
        jButtonPesquisarImagem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPesquisarImagemActionPerformed(evt);
            }
        });

        Aventura.setText("Aventura");
        Aventura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AventuraActionPerformed(evt);
            }
        });

        jButtonDrama.setText("Drama");
        jButtonDrama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDramaActionPerformed(evt);
            }
        });

        jButton12.setText("Terror");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton13.setText("Artes Marciais");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jButton14.setText("Desenho");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jButton15.setText("Erotico");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        jButtonComedia.setText("Comedia");
        jButtonComedia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonComediaActionPerformed(evt);
            }
        });

        jButtonReligiosos.setText("Religioso");
        jButtonReligiosos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonReligiososActionPerformed(evt);
            }
        });

        jButtonRomance.setText("Romance");
        jButtonRomance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRomanceActionPerformed(evt);
            }
        });

        jButtonDocumentario.setText("Documentario");
        jButtonDocumentario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDocumentarioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jButtonGravaImagem)
                                    .addGap(18, 18, 18)
                                    .addComponent(jButtonAtualizar))
                                .addComponent(jLabelImagem, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextFieldId, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonPesquisarImagem))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 85, Short.MAX_VALUE)
                        .addComponent(jTextFieldBuscarImagem, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)
                        .addComponent(jButton10)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jButtonReligiosos)
                .addGap(18, 18, 18)
                .addComponent(Aventura)
                .addGap(18, 18, 18)
                .addComponent(jButtonDrama)
                .addGap(18, 18, 18)
                .addComponent(jButton12)
                .addGap(18, 18, 18)
                .addComponent(jButton13)
                .addGap(18, 18, 18)
                .addComponent(jButton14)
                .addGap(18, 18, 18)
                .addComponent(jButtonComedia)
                .addGap(18, 18, 18)
                .addComponent(jButton15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonDocumentario)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonRomance)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton10)
                    .addComponent(jTextFieldBuscarImagem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAtualizar)
                    .addComponent(jButtonGravaImagem))
                .addGap(18, 18, 18)
                .addComponent(jLabelImagem, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonPesquisarImagem)
                    .addComponent(jTextFieldId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(122, 122, 122))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Aventura)
                    .addComponent(jButtonDrama)
                    .addComponent(jButton12)
                    .addComponent(jButton13)
                    .addComponent(jButton14)
                    .addComponent(jButton15)
                    .addComponent(jButtonComedia)
                    .addComponent(jButtonReligiosos)
                    .addComponent(jButtonDocumentario)
                    .addComponent(jButtonRomance))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarActionPerformed
            // TODO add your handling code here:
        
        /*mod.setTitulo(jTextFieldTitulo.getText());
        mod.setTipo(jTextFieldTipo.getText());
        mod.setQuantidade(Integer.parseInt(jTextFieldQuanti.getText()));
        
        control.salvar(mod);*/
        
         conex.conexao();
        try {
           

            PreparedStatement pst=conex.conn.prepareStatement("insert into dvds(titulo,quantidade,tipo,img)values(?,?,?,?)");
            
             pst.setString(1, jTextFieldTitulo.getText());
             pst.setInt(2, Integer.parseInt(jTextFieldQuanti.getText()));
             pst.setString(3, jTextFieldTipo.getText());             
             pst.setBinaryStream(4, fis,longitudBytes);
               
             pst.execute();
             pst.close();
             jLabelImagem.setIcon(null);          
             
             
             jTextFieldTitulo.setText("");
             jTextFieldQuanti.setText("");
             jTextFieldTipo.setText("");
          
              JOptionPane.showMessageDialog(rootPane,"Guardado corretamente");
            
       preencherTabela("select * from dvds");
        } catch (SQLException |NumberFormatException |HeadlessException ex) {
            JOptionPane.showMessageDialog(rootPane,"Falha ao gravar a imagem!/Erro"+ex);
        
        }
        
    }                                                  

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
        conex.conexao();
        try { 
               
        String sql="update imagem set nome=?,img=? where id='"+jTextFieldId.getText()+"'";
        
        
        
        PreparedStatement pst=conex.conn.prepareStatement(sql);
        
              
        
        
             pst.setString(1, jTextFieldBuscarImagem.getText());
              
             pst.setBinaryStream(2, fis,longitudBytes);
               
             pst.execute();
             pst.close();
             jLabelImagem.setIcon(null);
             jTextFieldId.setText("");
             jTextFieldBuscarImagem.setText("");
          
              JOptionPane.showMessageDialog(rootPane,"Atualização concluida");
            
       
        } catch (SQLException |NumberFormatException |HeadlessException ex) {
            JOptionPane.showMessageDialog(rootPane,"Falha ao Atualizar a imagem!/Erro"+ex);
        
        }
        
        
        
    }//GEN-LAST:event_jButtonSalvarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
/*        try {
            // TODO add your handling code here:
            conex.conexao();
           preencherTabela("select * from dvds where titulo like  '%"+jtFilme.getText()+"%'");
            
            conex.rs.first();
            
        } catch (SQLException ex) {
           JOptionPane.showMessageDialog(rootPane,"Erro ao buscar"+ ex);
        }*/
        
        
           ImageIcon foto;
            InputStream is ;
            String nombre; 
            String quantidade;
            String tipo;
            String codigo;
         
        try {         
                
                     
             conex.execultasql("select img,titulo,quantidade,tipo,id_dvd from dvds where titulo like  '%"+jtFilme.getText()+"%'");
            
            
            
            
            while(conex.rs.next()){
                
                
           
         
                 
               is=conex.rs.getBinaryStream(1);
               nombre=conex.rs.getString(2);
               quantidade=conex.rs.getString(3);
               tipo=conex.rs.getString(4);
               codigo=conex.rs.getString(5);
               
                BufferedImage bi = ImageIO.read(is);  
                
                 
                foto= new ImageIcon(bi);
                
                Image img=foto.getImage();
                
                Image newimg=img.getScaledInstance(200,200,java.awt.Image.SCALE_SMOOTH);
                
                ImageIcon newicon=new ImageIcon(newimg);
                
                jLabelImagem.setIcon(newicon);
                jTextFieldTitulo.setText(nombre);
                jTextFieldQuanti.setText(quantidade);
                jTextFieldTipo.setText(tipo);
                jTextFieldCodg.setText(codigo);
            }   
            
             } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane,"Erro ao buscar a imagem!"+ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        dispose();
        new FrmDvds().setVisible(true);
        jTextFieldTitulo.requestFocus();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
         if(flag==2){
            mod.setTitulo(jTextFieldTitulo.getText());
            mod.setTipo(jTextFieldTipo.getText());            
            mod.setQuantidade(Integer.parseInt(jTextFieldQuanti.getText()));            
            mod.setCodigo(Integer.parseInt(jTextFieldCodg.getText()));
            
            control.Alterar(mod);
             preencherTabela("select * from dvds");
            
        }else{
            mod.setTitulo(jTextFieldTitulo.getText());
            mod.setTipo(jTextFieldTipo.getText());            
            mod.setQuantidade(Integer.parseInt(jTextFieldQuanti.getText()));            
            mod.setCodigo(Integer.parseInt(jTextFieldCodg.getText()));
            
            control.Alterar(mod);
             preencherTabela("select * from dvds");
       }       
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        mod.setCodigo(Integer.parseInt(jTextFieldCodg.getText()));
        control.Excluir(mod);
        preencherTabela("select * from dvds");
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        mod=control.Primeiro();
        jTextFieldCodg.setText(String.valueOf(mod.getCodigo()));
        jTextFieldTitulo.setText(mod.getTitulo());
        jTextFieldTipo.setText(mod.getTipo());
        jTextFieldQuanti.setText(String.valueOf(mod.getQuantidade()));
        
        
        ////////////////////////////////////////////////////////
            
            ImageIcon foto;
            InputStream is ;
           // String nombre; 
         
        try {         
                
              //para mostrar as fotos relacionadas ao id       
             conex.execultasql("select img,titulo from dvds where id_dvd =  '"+jTextFieldCodg.getText()+"'");
            
            
            
            
            while(conex.rs.next()){
                
                
           
         
                 
               is=conex.rs.getBinaryStream(1);
             //  nombre=conex.rs.getString(2);
                BufferedImage bi = ImageIO.read(is);  
                
                 
                foto= new ImageIcon(bi);
                
                Image img=foto.getImage();
                //Image newimg=img.getScaledInstance(140,170,java.awt.Image.SCALE_SMOOTH);
                Image newimg=img.getScaledInstance(200,200,java.awt.Image.SCALE_SMOOTH);
                
                ImageIcon newicon=new ImageIcon(newimg);
                
                jLabelImagem.setIcon(newicon);
               // jTextFieldTitulo.setText(nombre);
                
            }   
            
             } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane,"Erro ao buscar a imagem!"+ex);
        }
            
            
            
            /////////////////////////////////////////////////////////
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        mod=control.Ultimo();
        jTextFieldCodg.setText(String.valueOf(mod.getCodigo()));
        jTextFieldTitulo.setText(mod.getTitulo());
        jTextFieldTipo.setText(mod.getTipo());
        jTextFieldQuanti.setText(String.valueOf(mod.getQuantidade()));
        
        
        ////////////////////////////////////////////////////////
            
            ImageIcon foto;
            InputStream is ;
           // String nombre; 
         
        try {         
                
              //para mostrar as fotos relacionadas ao id       
             conex.execultasql("select img,titulo from dvds where id_dvd =  '"+jTextFieldCodg.getText()+"'");
            
            
            
            
            while(conex.rs.next()){
                
                
           
         
                 
               is=conex.rs.getBinaryStream(1);
             //  nombre=conex.rs.getString(2);
                BufferedImage bi = ImageIO.read(is);  
                
                 
                foto= new ImageIcon(bi);
                
                Image img=foto.getImage();
                //Image newimg=img.getScaledInstance(140,170,java.awt.Image.SCALE_SMOOTH);
                Image newimg=img.getScaledInstance(200,200,java.awt.Image.SCALE_SMOOTH);
                
                ImageIcon newicon=new ImageIcon(newimg);
                
                jLabelImagem.setIcon(newicon);
               // jTextFieldTitulo.setText(nombre);
                
            }   
            
             } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane,"Erro ao buscar a imagem!"+ex);
        }
            
            
            
            /////////////////////////////////////////////////////////
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        mod=control.Anterior();
        jTextFieldCodg.setText(String.valueOf(mod.getCodigo()));
        jTextFieldTitulo.setText(mod.getTitulo());
        jTextFieldTipo.setText(mod.getTipo());
        jTextFieldQuanti.setText(String.valueOf(mod.getQuantidade()));
        
        ////////////////////////////////////////////////////////
            
            ImageIcon foto;
            InputStream is ;
           // String nombre; 
         
        try {         
                
              //para mostrar as fotos relacionadas ao id       
             conex.execultasql("select img,titulo from dvds where id_dvd =  '"+jTextFieldCodg.getText()+"'");
            
            
            
            
            while(conex.rs.next()){
                
                
           
         
                 
               is=conex.rs.getBinaryStream(1);
             //  nombre=conex.rs.getString(2);
                BufferedImage bi = ImageIO.read(is);  
                
                 
                foto= new ImageIcon(bi);
                
                Image img=foto.getImage();
                //Image newimg=img.getScaledInstance(140,170,java.awt.Image.SCALE_SMOOTH);
                Image newimg=img.getScaledInstance(200,200,java.awt.Image.SCALE_SMOOTH);
                
                ImageIcon newicon=new ImageIcon(newimg);
                
                jLabelImagem.setIcon(newicon);
               // jTextFieldTitulo.setText(nombre);
                
            }   
            
             } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane,"Erro ao buscar a imagem!"+ex);
        }
            
            
            
            /////////////////////////////////////////////////////////
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        mod=control.Proximo();
        jTextFieldCodg.setText(String.valueOf(mod.getCodigo()));
        jTextFieldTitulo.setText(mod.getTitulo());
        jTextFieldTipo.setText(mod.getTipo());
        jTextFieldQuanti.setText(String.valueOf(mod.getQuantidade()));
        
        ////////////////////////////////////////////////////////
            
            ImageIcon foto;
            InputStream is ;
           // String nombre; 
         
        try {         
                
              //para mostrar as fotos relacionadas ao id       
             conex.execultasql("select img,titulo from dvds where id_dvd =  '"+jTextFieldCodg.getText()+"'");
            
            
            
            
            while(conex.rs.next()){
                
                
           
         
                 
               is=conex.rs.getBinaryStream(1);
             //  nombre=conex.rs.getString(2);
                BufferedImage bi = ImageIO.read(is);  
                
                 
                foto= new ImageIcon(bi);
                
                Image img=foto.getImage();
                //Image newimg=img.getScaledInstance(140,170,java.awt.Image.SCALE_SMOOTH);
                Image newimg=img.getScaledInstance(200,200,java.awt.Image.SCALE_SMOOTH);
                
                ImageIcon newicon=new ImageIcon(newimg);
                
                jLabelImagem.setIcon(newicon);
               // jTextFieldTitulo.setText(nombre);
                
            }   
            
             } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane,"Erro ao buscar a imagem!"+ex);
        }
            
            
            
            /////////////////////////////////////////////////////////
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
/*        // TODO add your handling code here:
             FileNameExtensionFilter filtro=new FileNameExtensionFilter("Formatos de Arquivos JPEG(*.JPG;*.JPEG)","jpg","jpeg");    
            
             JFileChooser arquivo= new JFileChooser();
             arquivo.addChoosableFileFilter(filtro);
             arquivo.setDialogTitle("Abrir arquivo");
             File ruta = new File("C:/imagem");
             arquivo.setCurrentDirectory(ruta);
             
             int ventana=arquivo.showOpenDialog(null);
             
             
             if(ventana==JFileChooser.APPROVE_OPTION){
                 File file=arquivo.getSelectedFile();
                 jTextFieldBuscarImagem.setText(String.valueOf(file));
                 
                 Image foto=getToolkit().getImage(jTextFieldBuscarImagem.getText());//pega a imagem imprimindo o caminho
                 //Image foto=getToolkit().getImage(String.valueOf(file));//pega a imagem sem imprimir o caminho
                 foto=foto.getScaledInstance(110, 110,Image.SCALE_DEFAULT);
                 jLabelImagem.setIcon(new ImageIcon(foto));
             }*/
        
         jLabelImagem.setIcon(null);
        
         FileNameExtensionFilter filtro=new FileNameExtensionFilter("Formatos de Arquivos JPEG(*.JPG;*.JPEG)","jpg","jpeg");    
          
         
         
             JFileChooser j= new JFileChooser();
             j.setFileSelectionMode(JFileChooser.FILES_ONLY);
             
            
             
             j.addChoosableFileFilter(filtro);
             j.setDialogTitle("Abrir arquivo");
             File ruta = new File("C:/imagem");
             j.setCurrentDirectory(ruta);
             
             
             
             int estado=j.showOpenDialog(null);
             
             
             if(estado==JFileChooser.APPROVE_OPTION){
                 
                 try{
                 
                 fis=new FileInputStream(j.getSelectedFile());
                 this.longitudBytes=(int)j.getSelectedFile().length();
                 
                 try{
                     
                    Image icono=ImageIO.read(j.getSelectedFile()).getScaledInstance
        (jLabelImagem.getWidth(),jLabelImagem.getHeight(), Image.SCALE_DEFAULT);
                    jLabelImagem.setIcon(new ImageIcon(icono));
                    jLabelImagem.updateUI();
                     
             }catch(IOException ex){
                     
                     
             JOptionPane.showMessageDialog(rootPane,"imagem"+ex);
           }
                 
         } catch(FileNotFoundException ex){
                 
                 ex.printStackTrace();
                 
       }     
                
     }

       


             
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButtonGravaImagemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGravaImagemActionPerformed
      
        conex.conexao();
        try {
           

            PreparedStatement pst=conex.conn.prepareStatement("insert into imagem(nome,img)values(?,?)");
            
              pst.setString(1, jTextFieldBuscarImagem.getText());
              
               pst.setBinaryStream(2, fis,longitudBytes);
               
             pst.execute();
             pst.close();
             jLabelImagem.setIcon(null);
             jTextFieldId.setText("");
             jTextFieldBuscarImagem.setText("");
          
              JOptionPane.showMessageDialog(rootPane,"Guardado corretamente");
            
       
        } catch (SQLException |NumberFormatException |HeadlessException ex) {
            JOptionPane.showMessageDialog(rootPane,"Falha ao gravar a imagem!/Erro"+ex);
        
        }
    
    }//GEN-LAST:event_jButtonGravaImagemActionPerformed

    private void jButtonAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAtualizarActionPerformed
        // TODO add your handling code here:
        conex.conexao();
        try { 
               
        String sql="update imagem set nome=?,img=? where id='"+jTextFieldId.getText()+"'";
        
        
        
        PreparedStatement pst=conex.conn.prepareStatement(sql);
        
              
        
        
             pst.setString(1, jTextFieldBuscarImagem.getText());
              
             pst.setBinaryStream(2, fis,longitudBytes);
               
             pst.execute();
             pst.close();
             jLabelImagem.setIcon(null);
             jTextFieldId.setText("");
             jTextFieldBuscarImagem.setText("");
          
              JOptionPane.showMessageDialog(rootPane,"Atualização concluida");
            
       
        } catch (SQLException |NumberFormatException |HeadlessException ex) {
            JOptionPane.showMessageDialog(rootPane,"Falha ao Atualizar a imagem!/Erro"+ex);
        
        }
                 
    }//GEN-LAST:event_jButtonAtualizarActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        try {
            // TODO add your handling code here:
            
            
            String id = ""+jTable2.getValueAt(jTable2.getSelectedRow(),0);
            
           
            conex.conexao();
            
            
            conex.execultasql("select * from  imagem where id='"+id+"'");
           
            
            conex.rs.first();
            
            jTextFieldId.setText(String.valueOf(conex.rs.getInt("id")));
            jTextFieldBuscarImagem.setText(conex.rs.getString("nome"));
            
            
            
            //////////////////////////////////////////////////////////
            
            ImageIcon foto;
            InputStream is ;
            String nombre; 
         
        try {         
                
                     
             conex.execultasql("select img from imagem where id="+jTextFieldId.getText());
            
            
            
            
            while(conex.rs.next()){
                
                
           
         
                 
               is=conex.rs.getBinaryStream(1);
                BufferedImage bi = ImageIO.read(is);  
                
                 
                foto= new ImageIcon(bi);
                
                Image img=foto.getImage();
                
                Image newimg=img.getScaledInstance(200,200,java.awt.Image.SCALE_SMOOTH);
                
                ImageIcon newicon=new ImageIcon(newimg);
                
                jLabelImagem.setIcon(newicon);
               // jTextFieldBuscarImagem.setText(nombre);
                
            }   
            
            
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane,"Erro ao buscar a imagem!"+ex);
        }
        
            
            //////////////////////////////////////////////////////////
                        
        } catch (SQLException ex) {
            Logger.getLogger(FrmDvds.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTable2MouseClicked

    private void jButtonPesquisarImagemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPesquisarImagemActionPerformed
        
        
      //  String sql="select img from imagem where id="+jTextFieldId.getText();
        
            ImageIcon foto;
            InputStream is ;
            String nombre; 
         
        try {         
                
                     
             conex.execultasql("select img from imagem where id="+jTextFieldId.getText());
            
            
            
            
            while(conex.rs.next()){
                
                
           
         
                 
               is=conex.rs.getBinaryStream(1);
                BufferedImage bi = ImageIO.read(is);  
                
                 
                foto= new ImageIcon(bi);
                
                Image img=foto.getImage();
                //Image newimg=img.getScaledInstance(140,170,java.awt.Image.SCALE_SMOOTH);
                Image newimg=img.getScaledInstance(200,200,java.awt.Image.SCALE_SMOOTH);
                
                ImageIcon newicon=new ImageIcon(newimg);
                
                jLabelImagem.setIcon(newicon);
               // jTextFieldBuscarImagem.setText(nombre);
                
            }   
            
            
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane,"Erro ao buscar a imagem!"+ex);
        }
            
            
       
           
        
    }//GEN-LAST:event_jButtonPesquisarImagemActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        
       try{ 
        String id = ""+jTable1.getValueAt(jTable1.getSelectedRow(),0);
            
           
            conex.conexao();
            
            //para relacionar o clique deacordo com o primeiro campo da tabela
            conex.execultasql("select * from  dvds where id_dvd='"+id+"'");
           
            
            conex.rs.first();
            
            jTextFieldCodg.setText(String.valueOf(conex.rs.getInt("id_dvd")));
            jTextFieldTitulo.setText(conex.rs.getString("titulo"));
            jTextFieldQuanti.setText(String.valueOf(conex.rs.getInt("quantidade")));
            jTextFieldTipo.setText(conex.rs.getString("tipo"));
        
        
        //////////////////////////////////////
        
        
        
        ImageIcon foto;
            InputStream is ;
           // String nombre; 
         
        try {         
                
              //para mostrar as fotos relacionadas ao id       
             conex.execultasql("select img from dvds where id_dvd =  '"+jTextFieldCodg.getText()+"'");
            
            
            
            
            while(conex.rs.next()){
                
                
           
         
                 
               is=conex.rs.getBinaryStream(1);
             //  nombre=conex.rs.getString(2);
                BufferedImage bi = ImageIO.read(is);  
                
                 
                foto= new ImageIcon(bi);
                
                Image img=foto.getImage();
                //Image newimg=img.getScaledInstance(140,170,java.awt.Image.SCALE_SMOOTH);
                Image newimg=img.getScaledInstance(200,200,java.awt.Image.SCALE_SMOOTH);
                
                ImageIcon newicon=new ImageIcon(newimg);
                
                jLabelImagem.setIcon(newicon);
               // jTextFieldTitulo.setText(nombre);
                
            }   
            
             } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane,"Erro ao buscar a imagem!"+ex);
        }
        
        
        
        
        //////////////////////////////////////
        
        
        
        } catch (SQLException ex) {
            Logger.getLogger(FrmDvds.class.getName()).log(Level.SEVERE, null, ex);
        }
      
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButtonAtualizarFotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAtualizarFotoActionPerformed
        // TODO add your handling code here:
        
        conex.conexao();
        try { 
               
        String sql="update dvds set titulo=?,quantidade=?,tipo=?,img=? where id_dvd='"+jTextFieldCodg.getText()+"'";
        
        
        
        PreparedStatement pst=conex.conn.prepareStatement(sql);
        
              
        
        
             pst.setString(1, jTextFieldTitulo.getText());
             pst.setInt(2, Integer.parseInt(jTextFieldQuanti.getText()));
             pst.setString(3, jTextFieldTipo.getText());             
             pst.setBinaryStream(4, fis,longitudBytes);
               
             pst.execute();
             pst.close();
             
             jLabelImagem.setIcon(null);        
             
             
             jTextFieldTitulo.setText("");
             jTextFieldQuanti.setText("");
             jTextFieldTipo.setText("");
          
              JOptionPane.showMessageDialog(rootPane,"Atualização concluida");
            
       preencherTabela("select * from dvds");
        } catch (SQLException |NumberFormatException |HeadlessException ex) {
            JOptionPane.showMessageDialog(rootPane,"Falha ao Atualizar a imagem!/Erro"+ex);
        
        }
    }//GEN-LAST:event_jButtonAtualizarFotoActionPerformed

    private void jButtonBuscarFotosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarFotosActionPerformed
        // TODO add your handling code here:
        
         jLabelImagem.setIcon(null);
        
         FileNameExtensionFilter filtro=new FileNameExtensionFilter("Formatos de Arquivos JPEG(*.JPG;*.JPEG)","jpg","jpeg");    
          
         
         
             JFileChooser j= new JFileChooser();
             j.setFileSelectionMode(JFileChooser.FILES_ONLY);
             
            
             
             j.addChoosableFileFilter(filtro);
             j.setDialogTitle("Abrir arquivo");
             File ruta = new File("C:/imagem");
             j.setCurrentDirectory(ruta);
             
             
             
             int estado=j.showOpenDialog(null);
             
             
             if(estado==JFileChooser.APPROVE_OPTION){
                 
                 try{
                 
                 fis=new FileInputStream(j.getSelectedFile());
                 this.longitudBytes=(int)j.getSelectedFile().length();
                 
                 try{
                     
                    Image icono=ImageIO.read(j.getSelectedFile()).getScaledInstance
        (jLabelImagem.getWidth(),jLabelImagem.getHeight(), Image.SCALE_DEFAULT);
                    jLabelImagem.setIcon(new ImageIcon(icono));
                    jLabelImagem.updateUI();
                     
             }catch(IOException ex){
                     
                     
             JOptionPane.showMessageDialog(rootPane,"imagem"+ex);
           }
                 
         } catch(FileNotFoundException ex){
                 
                 ex.printStackTrace();
                 
       }     
                
     }

       
    }//GEN-LAST:event_jButtonBuscarFotosActionPerformed

    private void AventuraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AventuraActionPerformed
        // TODO add your handling code here:
        FilmeAventura frm=new FilmeAventura();
        frm.setVisible(true);
    }//GEN-LAST:event_AventuraActionPerformed

    private void jButtonReligiososActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonReligiososActionPerformed
        // TODO add your handling code here:
        Religiao frm=new Religiao();
        frm.setVisible(true);
    }//GEN-LAST:event_jButtonReligiososActionPerformed

    private void jButtonDramaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDramaActionPerformed
        // TODO add your handling code here:
       Drama frm=new  Drama();
        frm.setVisible(true);
    }//GEN-LAST:event_jButtonDramaActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
         Terror frm=new  Terror();
         frm.setVisible(true);
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
         ArtesMarciais frm=new ArtesMarciais();
        frm.setVisible(true);
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:
         Desenho frm=new  Desenho();
        frm.setVisible(true);
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButtonComediaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonComediaActionPerformed
        // TODO add your handling code here:
         Comedia frm=new  Comedia();
        frm.setVisible(true);
    }//GEN-LAST:event_jButtonComediaActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        // TODO add your handling code here:
         Erotico frm=new  Erotico();
        frm.setVisible(true);
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButtonRomanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRomanceActionPerformed
        // TODO add your handling code here:
        
        Romance frm=new Romance();
        frm.setVisible(true);
    }//GEN-LAST:event_jButtonRomanceActionPerformed

    private void jButtonDocumentarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDocumentarioActionPerformed
        // TODO add your handling code here:
        Documentario frm=new Documentario();
        frm.setVisible(true);
    }//GEN-LAST:event_jButtonDocumentarioActionPerformed

    
     public void preencherTabela(String sql){
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Codigo","Titulo","Tipo","Quantidade"};
       
    // String hora = Hora.getText();// Coloca a hora na tabela
        
        conex.conexao();
        conex.execultasql(sql);                
            try {
                conex.rs.first();
                do {
                  
                    dados.add(new Object[]{conex.rs.getString("id_dvd"),conex.rs.getString("titulo"),conex.rs.getString("tipo"),conex.rs.getString("quantidade")});
                    
                   // j++;
                   
                   
                }while(conex.rs.next());
            } catch (SQLException ex) {
               // JOptionPane.showMessageDialog(rootPane,"Erro ao preencher o ArrayList!\nErro:"+ex);
            }
       
            
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
          jTable1.setModel(modelo);
          jTable1.getColumnModel().getColumn(0).setPreferredWidth(100);
          jTable1.getColumnModel().getColumn(0).setResizable(false);
          jTable1.getColumnModel().getColumn(1).setPreferredWidth(250);
          jTable1.getColumnModel().getColumn(1).setResizable(false);  
          jTable1.getColumnModel().getColumn(2).setPreferredWidth(200);
          jTable1.getColumnModel().getColumn(2).setResizable(false);  
          jTable1.getColumnModel().getColumn(3).setPreferredWidth(200);
          jTable1.getColumnModel().getColumn(3).setResizable(false); 
          jTable1.getTableHeader().setReorderingAllowed(false);
          jTable1.setAutoResizeMode(jTable1.AUTO_RESIZE_OFF);
          jTable1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);                               
    
       
       }
     
     
     
      public void preencherTabelaImg(String sql){
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"id","nome"};
       
    // String hora = Hora.getText();// Coloca a hora na tabela
        
        conex.conexao();
        conex.execultasql(sql);                
            try {
                conex.rs.first();
                do {
                  
                    dados.add(new Object[]{conex.rs.getString("id"),conex.rs.getString("nome")});
                    
                   // j++;
                   
                   
                }while(conex.rs.next());
            } catch (SQLException ex) {
               // JOptionPane.showMessageDialog(rootPane,"Erro ao preencher o ArrayList!\nErro:"+ex);
            }
       
            
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
          jTable2.setModel(modelo);
          jTable2.getColumnModel().getColumn(0).setPreferredWidth(50);
          jTable2.getColumnModel().getColumn(0).setResizable(false);
          jTable2.getColumnModel().getColumn(1).setPreferredWidth(150);
          jTable2.getColumnModel().getColumn(1).setResizable(false);
          
          
          jTable2.getTableHeader().setReorderingAllowed(false);
          jTable2.setAutoResizeMode(jTable2.AUTO_RESIZE_OFF);
          jTable2.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);                               
    
       
       }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmDvds.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmDvds.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmDvds.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmDvds.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmDvds().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Aventura;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JButton jButtonAtualizar;
    private javax.swing.JButton jButtonAtualizarFoto;
    private javax.swing.JButton jButtonBuscarFotos;
    private javax.swing.JButton jButtonComedia;
    private javax.swing.JButton jButtonDocumentario;
    private javax.swing.JButton jButtonDrama;
    private javax.swing.JButton jButtonGravaImagem;
    private javax.swing.JButton jButtonPesquisarImagem;
    private javax.swing.JButton jButtonReligiosos;
    private javax.swing.JButton jButtonRomance;
    private javax.swing.JButton jButtonSalvar;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabelImagem;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextFieldBuscarImagem;
    private javax.swing.JTextField jTextFieldCodg;
    private javax.swing.JTextField jTextFieldId;
    private javax.swing.JTextField jTextFieldQuanti;
    private javax.swing.JTextField jTextFieldTipo;
    private javax.swing.JTextField jTextFieldTitulo;
    private javax.swing.JTextField jtFilme;
    // End of variables declaration//GEN-END:variables
}
