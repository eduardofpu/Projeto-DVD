/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package nvisao;

import controle.ConectaBanco;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.InputStream;
import java.net.URL;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.AbstractAction;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;

import javax.swing.ListSelectionModel;
import modelo.ModeloTabela;

/**
 *
 * @author Delfino
 */
public class FrmEstoque extends javax.swing.JFrame {

    /**
     * Creates new form FrmEstoque
     */
    ConectaBanco conex = new ConectaBanco();
    int i=1;
    
    public FrmEstoque() {
        initComponents();
        
        URL url = this.getClass().getResource("/Imagens/dvd.png");  //coloca a imagem no lugar da tigela java
          Image imagemTitulo = Toolkit.getDefaultToolkit().getImage(url);  
            this.setIconImage(imagemTitulo);
        ////////////////////////////////////////////////////////////////////////////////    
        //faz os botões serem acionados com a tecla enter
    AbstractAction action = new AbstractAction() {
    @Override
    public void actionPerformed(ActionEvent e) {
        if(e.getSource() instanceof JButton){
        JButton button = (JButton) e.getSource();
        button.doClick();        
        } else if(e.getSource() instanceof JComponent){
            JComponent component = (JComponent) e.getSource();
            component.transferFocus();
        }
    }
    };
    jButton1.getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0), "DoClick");
    jButton1.getActionMap().put("DoClick", action);
    jButton2.getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0), "DoClick");
    jButton2.getActionMap().put("DoClick", action);
           
        
       // getRootPane().setDefaultButton(jButton8);//botão sair com enter
  ///////////////////////////////////////////////////////////////////////////////////////////////   
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableP = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jTextFieldFilmeEst = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jLabel2 = new javax.swing.JLabel();
        jLabelEstoque = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabelImagem = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("FILMES ALUGADOS");

        tableP.setBackground(new java.awt.Color(255, 255, 204));
        tableP.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        tableP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tableP.setCellSelectionEnabled(true);
        tableP.setRowHeight(30);
        tableP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablePMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableP);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/search.png"))); // NOI18N
        jButton1.setToolTipText("Pesquisar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextFieldFilmeEst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldFilmeEstActionPerformed(evt);
            }
        });

        jLabel1.setText("Nome do filme:");

        jDesktopPane1.setBackground(new java.awt.Color(0, 0, 51));
        jDesktopPane1.setForeground(new java.awt.Color(0, 0, 102));

        jLabel2.setForeground(new java.awt.Color(51, 204, 0));
        jLabel2.setText("O estoque possui :");

        jLabelEstoque.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelEstoque.setForeground(new java.awt.Color(51, 204, 0));
        jLabelEstoque.setText(".");

        jLabel3.setForeground(new java.awt.Color(51, 204, 0));
        jLabel3.setText("filme(s) com este titulo");

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addGap(169, 169, 169)
                .addComponent(jLabel2)
                .addGap(108, 108, 108)
                .addComponent(jLabelEstoque)
                .addGap(83, 83, 83)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabelEstoque)
                    .addComponent(jLabel3))
                .addContainerGap(51, Short.MAX_VALUE))
        );
        jDesktopPane1.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabelEstoque, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButton2.setText("Atualizar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabelImagem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/superg.jpg"))); // NOI18N
        jLabelImagem.setText("DVD");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 632, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabelImagem, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldFilmeEst, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2))
                    .addComponent(jDesktopPane1))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldFilmeEst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jLabel1)
                    .addComponent(jButton2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelImagem))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldFilmeEstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldFilmeEstActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldFilmeEstActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
       if(jTextFieldFilmeEst.getText().equals("")){
          JOptionPane.showMessageDialog(rootPane,"Informe o nome de um filme para buscalo!");
        }else{
           try {
               conex.conexao();
               
               ImageIcon foto;
               InputStream is ;
               
               
               try {
                   
                   
                   conex.execultasql("select img,titulo,quantidade,tipo,id_dvd from dvds where titulo like  '%"+jTextFieldFilmeEst.getText()+"%'");
                   
                   
                   
                   
                   while(conex.rs.next()){
                       
                       
                       
                       is=conex.rs.getBinaryStream(1);
                       
                       
                       BufferedImage bi = ImageIO.read(is);
                       
                       
                       foto= new ImageIcon(bi);
                       
                       Image img=foto.getImage();
                       
                       Image newimg=img.getScaledInstance(200,200,java.awt.Image.SCALE_SMOOTH);
                       
                       ImageIcon newicon=new ImageIcon(newimg);
                       
                       jLabelImagem.setIcon(newicon);
                       
                   }
                   
               } catch (Exception ex) {
                   JOptionPane.showMessageDialog(rootPane,"Erro ao buscar a imagem!"+ex);
               }
               
               
               
               //preencherTabela1("select loca_dvd.id_loca,loca_dvd.id_dvd,dvds.titulo ,dvds.quantidade,locadora.data_ini,locadora.data_devol,locadora.tipo_pag from loca_dvd, dvds, locadora where  loca_dvd.id_loca=locadora.id_loca and loca_dvd.id_dvd=dvds.id_dvd and dvds.titulo like'%"+jTextFieldFilmeEst.getText()+"%'");
               // preencherTabela1("select loca_dvd.id_loca,loca_dvd.id_dvd,dvds.titulo ,dvds.quantidade,locadora.data_ini,locadora.data_devol,locadora.tipo_pag from loca_dvd, dvds, locadora where  loca_dvd.id_loca=locadora.id_loca and loca_dvd.id_dvd=dvds.id_dvd and dvds.titulo like'%"+jTextFieldFilmeEst.getText()+"%'");
               
               
               preencherTabela1("select loca_dvd.id_loca, dvds.titulo ,locadora.data_ini,locadora.data_devol,loca_dvd.tipo_pagl from loca_dvd, dvds, locadora  where locadora.id_loca =loca_dvd.id_loca and   loca_dvd.id_dvd=dvds.id_dvd and tipo_pagl in ('Avista' , 'Devolução') and  dvds.titulo like'%"+jTextFieldFilmeEst.getText()+"%'");
//preencherTabela2("select loca_dvd.id_loca, dvds.titulo ,dvds.quantidade,locadora.data_ini,locadora.data_devol,locadora.tipo_pag from loca_dvd, dvds, locadora where locadora.id_loca =loca_dvd.id_loca and   loca_dvd.id_dvd=dvds.id_dvd and tipo_pag in ('Avista' , 'Devolução') and  dvds.titulo like'%"+jTextFieldFilmeEst.getText()+"% ' ; (select  COUNT(*)tipo_pag  from locadora where tipo_pag in ('Avista' , 'Devolução'))");
               //preencherTabela2("select  COUNT(*)tipo_pag  from locadora where tipo_pag in ('Avista' , 'Devolução')");
               
               
               
               
               
               String sqldvd="select * from dvds where titulo like'%"+jTextFieldFilmeEst.getText()+"%'";
               
               int estoque;
               conex.execultasql(sqldvd);
               conex.rs.first();
               
               estoque=conex.rs.getInt("quantidade");
               jLabelEstoque.setText(String.valueOf(estoque));
               
               jTextFieldFilmeEst.setText("");
               jTextFieldFilmeEst.setEnabled(!true);
               jButton1.setEnabled(!true);
              // JOptionPane.showMessageDialog(rootPane,"Clique na ultima linha para conferir o estoque!!");
           } catch (SQLException ex) {
               Logger.getLogger(FrmEstoque.class.getName()).log(Level.SEVERE, null, ex);
           }
       } 
                  
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void tablePMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablePMouseClicked
        // TODO add your handling code here:
      /*  
        int x,y,t;
        
        String qt = ""+tableP.getValueAt(tableP.getSelectedRow(),0);// preço para o jtxtFieldPreco
            
              x = Integer.parseInt(qt); // conversão do preco para float
              
               String est = ""+tableP.getValueAt(tableP.getSelectedRow(),3);// preço para o jtxtFieldPreco
            
              y = Integer.parseInt(est); // conversão do preco para float
              t=y-x;
              
              
       
             
        
           jLabelEstoque.setText(String.valueOf(t));
        JOptionPane.showMessageDialog(rootPane,"Possui  " + t + "  filme(s) na pratilheira");
        */   
    }//GEN-LAST:event_tablePMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
         dispose();
        new FrmEstoque().setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    
    /**
     * @param args the command line arguments
     */
    
    
   /* public void preencherTabela1(String sql){
       
            
            
            ArrayList dados = new ArrayList();
            //String[] Colunas = new String[]{"Qt.","Codigo de locação ","Nome cliente","Data Locação ","Data Devolução","Preço","tipo pag","codigo cl"};
            String[] Colunas = new String[]{"Qt.","locação ","cod dvd","titulo","Estoque","Data Locação ","Data Devolução","tipo pag"};
            // String hora = Hora.getText();// Coloca a hora na tabela
            
            conex.conexao();
            conex.execultasql(sql);                
            try {
                conex.rs.first();
                do {
                    
                    // dados.add(new Object[]{i,conex.rs.getString("id_loca"),conex.rs.getString("nome_cl"),conex.rs.getString("data_ini"),conex.rs.getString("data_devol"),conex.rs.getString("preco"),conex.rs.getString("tipo_pag"),conex.rs.getString("id_cli")});
                    dados.add(new Object[]{i,conex.rs.getString("id_loca"),conex.rs.getString("id_dvd"),conex.rs.getString("titulo"),conex.rs.getString("quantidade"),conex.rs.getString("data_ini"),conex.rs.getString("data_devol"),conex.rs.getString("tipo_pag")});
                    i++;
                    
                    
                }while(conex.rs.next());
            } catch (SQLException ex) {
                  JOptionPane.showMessageDialog(rootPane,"Este filme ainda não foi alugado!");
            }
            
            
            ModeloTabela modelo = new ModeloTabela(dados, Colunas);
            tableP.setModel(modelo);
            tableP.getColumnModel().getColumn(0).setPreferredWidth(40);
            tableP.getColumnModel().getColumn(0).setResizable(false);
            tableP.getColumnModel().getColumn(1).setPreferredWidth(70);
            tableP.getColumnModel().getColumn(1).setResizable(false);
            tableP.getColumnModel().getColumn(2).setPreferredWidth(70);
            tableP.getColumnModel().getColumn(2).setResizable(false);
            tableP.getColumnModel().getColumn(3).setPreferredWidth(150);
            tableP.getColumnModel().getColumn(3).setResizable(false);
            tableP.getColumnModel().getColumn(4).setPreferredWidth(70);
            tableP.getColumnModel().getColumn(4).setResizable(false);
            tableP.getColumnModel().getColumn(5).setPreferredWidth(100);
            tableP.getColumnModel().getColumn(5).setResizable(false);
            tableP.getColumnModel().getColumn(6).setPreferredWidth(90);
            tableP.getColumnModel().getColumn(6).setResizable(false);
            tableP.getColumnModel().getColumn(7).setPreferredWidth(90);
            tableP.getColumnModel().getColumn(7).setResizable(false);
            //tableP.getColumnModel().getColumn(8).setPreferredWidth(90);
            // tableP.getColumnModel().getColumn(8).setResizable(false);
            
            
            tableP.getTableHeader().setReorderingAllowed(false);
            tableP.setAutoResizeMode(tableP.AUTO_RESIZE_OFF);
            tableP.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
       
          
        
       
       }*/
    public void preencherTabela1(String sql){
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Linha","Cod.Loc ","Titulo","Data Locação ","Data Devolução","Tipo pagamento"};
       
    // String hora = Hora.getText();// Coloca a hora na tabela
        
        conex.conexao();
        conex.execultasql(sql);                
            try {
                conex.rs.first();
                do {
                  
                    dados.add(new Object[]{i,conex.rs.getString("id_loca"),conex.rs.getString("titulo"),conex.rs.getString("data_ini"),conex.rs.getString("data_devol"),conex.rs.getString("tipo_pagl")});
                    //,conex.rs.getString("quantidade"),
                   i++;
                   
                   
                }while(conex.rs.next());
            } catch (SQLException ex) {
               JOptionPane.showMessageDialog(rootPane,"Este filme ainda não foi alugado!");
                
                
            }
       
            
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
          tableP.setModel(modelo);
          tableP.getColumnModel().getColumn(0).setPreferredWidth(40);
          tableP.getColumnModel().getColumn(0).setResizable(false);
          tableP.getColumnModel().getColumn(1).setPreferredWidth(70);
          tableP.getColumnModel().getColumn(1).setResizable(false);  
          tableP.getColumnModel().getColumn(2).setPreferredWidth(100);
          tableP.getColumnModel().getColumn(2).setResizable(false);  
          //tableP.getColumnModel().getColumn(3).setPreferredWidth(100);
          //tableP.getColumnModel().getColumn(3).setResizable(false);  
          tableP.getColumnModel().getColumn(3).setPreferredWidth(140);
          tableP.getColumnModel().getColumn(3).setResizable(false); 
          tableP.getColumnModel().getColumn(4).setPreferredWidth(70);
          tableP.getColumnModel().getColumn(4).setResizable(false);  
          tableP.getColumnModel().getColumn(5).setPreferredWidth(190);
          tableP.getColumnModel().getColumn(5).setResizable(false);  
          //tableP.getColumnModel().getColumn(6).setPreferredWidth(40);
          //tableP.getColumnModel().getColumn(6).setResizable(false); 
         // tableP.getColumnModel().getColumn(8).setPreferredWidth(90);
          //tableP.getColumnModel().getColumn(8).setResizable(false);  
          
          tableP.getTableHeader().setReorderingAllowed(false);
          tableP.setAutoResizeMode(tableP.AUTO_RESIZE_OFF);
          tableP.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);                                
    
       
       }
    
    /*public void preencherTabela2(String sql){
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"total"};
       
    // String hora = Hora.getText();// Coloca a hora na tabela
        
        conex.conexao();
        conex.execultasql(sql);                
            try {
                conex.rs.first();
                do {
                  
                    dados.add(new Object[]{conex.rs.getString("tipo_pag")});
                    
                   
                   
                   
                }while(conex.rs.next());
            } catch (SQLException ex) {
               // JOptionPane.showMessageDialog(rootPane,"Erro ao preencher o ArrayList!\nErro:"+ex);
            }
       
            
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
          jTable.setModel(modelo);
          jTable.getColumnModel().getColumn(0).setPreferredWidth(40);
          jTable.getColumnModel().getColumn(0).setResizable(false);
          
          
          jTable.getTableHeader().setReorderingAllowed(false);
          jTable.setAutoResizeMode(jTable.AUTO_RESIZE_OFF);
          jTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);                                
    
       
       }
    */
     
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmEstoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmEstoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmEstoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmEstoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmEstoque().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelEstoque;
    private javax.swing.JLabel jLabelImagem;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextFieldFilmeEst;
    private javax.swing.JTable tableP;
    // End of variables declaration//GEN-END:variables
}
